package DRRSApp;


/**
* DRRSApp/DRRSPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DRRSidl.idl
* Tuesday, October 19, 2021 12:12:48 o'clock AM EDT
*/

public abstract class DRRSPOA extends org.omg.PortableServer.Servant
 implements DRRSApp.DRRSOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createRoom", new java.lang.Integer (0));
    _methods.put ("deleteRoom", new java.lang.Integer (1));
    _methods.put ("bookRoom", new java.lang.Integer (2));
    _methods.put ("overLimit", new java.lang.Integer (3));
    _methods.put ("getTimeSlots", new java.lang.Integer (4));
    _methods.put ("cancelBooking", new java.lang.Integer (5));
    _methods.put ("changeReservation", new java.lang.Integer (6));
    _methods.put ("shutdown", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DRRSApp/DRRS/createRoom
       {
         String room_Number = in.read_string ();
         String date = in.read_string ();
         String beginTime = in.read_string ();
         String endTime = in.read_string ();
         String $result = null;
         $result = this.createRoom (room_Number, date, beginTime, endTime);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // DRRSApp/DRRS/deleteRoom
       {
         String room_Number = in.read_string ();
         String date = in.read_string ();
         String listOfTimeSlotsIndexFromInputString[] = DRRSApp.StringListHelper.read (in);
         String $result = null;
         $result = this.deleteRoom (room_Number, date, listOfTimeSlotsIndexFromInputString);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // DRRSApp/DRRS/bookRoom
       {
         String studentID = in.read_string ();
         String campusName = in.read_string ();
         String roomNumber = in.read_string ();
         String date = in.read_string ();
         int timeslot = in.read_long ();
         String $result = null;
         $result = this.bookRoom (studentID, campusName, roomNumber, date, timeslot);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // DRRSApp/DRRS/overLimit
       {
         String studentID = in.read_string ();
         boolean $result = false;
         $result = this.overLimit (studentID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // DRRSApp/DRRS/getTimeSlots
       {
         String date = in.read_string ();
         String room = in.read_string ();
         String campus = in.read_string ();
         String $result[] = null;
         $result = this.getTimeSlots (date, room, campus);
         out = $rh.createReply();
         DRRSApp.StringListHelper.write (out, $result);
         break;
       }

       case 5:  // DRRSApp/DRRS/cancelBooking
       {
         String bookingID = in.read_string ();
         String studentID = in.read_string ();
         String $result = null;
         $result = this.cancelBooking (bookingID, studentID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // DRRSApp/DRRS/changeReservation
       {
         String studentID = in.read_string ();
         String bookingID = in.read_string ();
         String newCampusName = in.read_string ();
         String date = in.read_string ();
         String newRoomNo = in.read_string ();
         String newTimeSlot = in.read_string ();
         String $result = null;
         $result = this.changeReservation (studentID, bookingID, newCampusName, date, newRoomNo, newTimeSlot);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // DRRSApp/DRRS/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DRRSApp/DRRS:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DRRS _this() 
  {
    return DRRSHelper.narrow(
    super._this_object());
  }

  public DRRS _this(org.omg.CORBA.ORB orb) 
  {
    return DRRSHelper.narrow(
    super._this_object(orb));
  }


} // class DRRSPOA
